buildscript {
    ext {
        // Versions for all the dependencies we plan to use. It's particularly useful for kotlin and
        // navigation where the versions of the plugin needs to be the same as the version of the
        // library defined in the app Gradle file
        version_android_gradle_plugin = '4.0.0'
        version_core = '1.3.0'
        version_constraint_layout = '1.1.3'
        version_kotlin = "1.3.72"
        version_kotlin_coroutines = "1.1.1"
        version_lifecycle_extensions = '2.2.0'
        version_navigation = "1.0.0"

//        espressoVersion = '3.1.0-alpha4'
        junitVersion = '4.13-beta-3'
        hamcrestVersion = '1.3'
//        runnerExtVersion = '1.1.0'
//        rulesVersion = '1.0.1'
    }

    repositories {
        google()
        jcenter()
    }
    dependencies {
        classpath "com.android.tools.build:gradle:$version_android_gradle_plugin"
        classpath "org.jetbrains.kotlin:kotlin-gradle-plugin:$version_kotlin"
        classpath "android.arch.navigation:navigation-safe-args-gradle-plugin:$version_navigation"
    }
}

allprojects {
    repositories {
        google()
        jcenter()
    }
}

// JA comment: cleaning: I recommend from bash (carefully, no typos!!):
//   cd SomeRepo
//   rm -rf build */build
// this is MUCH faster than Gradle and is a sure wipe-out.
// YMMV (your mileage may vary).
//   In English - this is shorthand (meaning a short way of saying) that:
//   What you get on your system may be different than what I see on my system.



